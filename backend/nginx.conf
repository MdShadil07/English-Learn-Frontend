events {
    worker_connections 1024; # Increase for high concurrency
    use epoll; # Efficient event polling
    multi_accept on; # Accept multiple connections per worker
}

http {
    # Basic settings for performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M; # For file uploads

    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting zone
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream servers (PM2 cluster)
    upstream english_practice_backend {
        server 127.0.0.1:5000;
        server 127.0.0.1:5001;
        server 127.0.0.1:5002;
        server 127.0.0.1:5003;

        # Load balancing method
        least_conn; # Route to server with least connections

        # Health checks
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name your-domain.com www.your-domain.com;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Redirect HTTP to HTTPS (uncomment when SSL is configured)
        # return 301 https://$server_name$request_uri;

        # Connection limits
        limit_conn conn_limit_per_ip 10; # Max 10 connections per IP

        # API routes with rate limiting
        location /api/ {
            # Apply rate limiting
            limit_req zone=api burst=20 nodelay;

            # Special limits for auth routes
            location ~ ^/api/auth/(login|register|refresh-token) {
                limit_req zone=auth burst=3 nodelay;
                proxy_pass http://english_practice_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # File upload limits
            location ~ ^/api/(profile/upload|files/upload) {
                limit_req zone=upload burst=5 nodelay;
                client_max_body_size 20M;
                proxy_pass http://english_practice_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Health check endpoint (no rate limiting)
            location = /api/health {
                proxy_pass http://english_practice_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Default API proxy
            proxy_pass http://english_practice_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            # Proxy caching for read operations
            proxy_cache api_cache;
            proxy_cache_key $request_method$request_uri;
            proxy_cache_valid 200 302 10m; # Cache successful responses for 10 minutes
            proxy_cache_valid 404 1m; # Cache 404s for 1 minute
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

            # Cache bypass for write operations
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache $request_method;

            # Proxy timeouts for scalability
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
        }

        # Static files caching (for uploads and assets)
        location /api/files/ {
            proxy_pass http://english_practice_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Aggressive caching for static files
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Frontend proxy (if serving frontend from same server)
        location / {
            proxy_pass http://frontend_server; # Replace with your frontend server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server (uncomment and configure SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com www.your-domain.com;
    #
    #     # SSL configuration
    #     ssl_certificate /path/to/your/certificate.crt;
    #     ssl_certificate_key /path/to/your/private.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #
    #     # Include the same configuration as HTTP server above
    # }

    # Cache zones for different content types
    proxy_cache_path /var/cache/nginx/api_cache levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=10m use_temp_path=off;
}

# Stream block for WebSocket support (if using Socket.IO)
stream {
    upstream websocket_backend {
        server 127.0.0.1:5000;
        server 127.0.0.1:5001;
        server 127.0.0.1:5002;
        server 127.0.0.1:5003;
    }

    server {
        listen 5001; # WebSocket port
        proxy_pass websocket_backend;
        proxy_timeout 30s;
        proxy_connect_timeout 10s;
    }
}
